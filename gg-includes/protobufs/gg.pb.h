// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gg.proto

#ifndef PROTOBUF_gg_2eproto__INCLUDED
#define PROTOBUF_gg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace gg {
namespace protobuf {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_gg_2eproto();
void protobuf_AssignDesc_gg_2eproto();
void protobuf_ShutdownFile_gg_2eproto();

class ExecutionRequest;
class ExecutionResponse;
class OutputItem;
class RequestItem;
class ResponseItem;

// ===================================================================

class RequestItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gg.protobuf.RequestItem) */ {
 public:
  RequestItem();
  virtual ~RequestItem();

  RequestItem(const RequestItem& from);

  inline RequestItem& operator=(const RequestItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestItem& default_instance();

  void Swap(RequestItem* other);

  // implements Message ----------------------------------------------

  inline RequestItem* New() const { return New(NULL); }

  RequestItem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestItem& from);
  void MergeFrom(const RequestItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RequestItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string hash = 1;
  void clear_hash();
  static const int kHashFieldNumber = 1;
  const ::std::string& hash() const;
  void set_hash(const ::std::string& value);
  void set_hash(const char* value);
  void set_hash(const char* value, size_t size);
  ::std::string* mutable_hash();
  ::std::string* release_hash();
  void set_allocated_hash(::std::string* hash);

  // optional string data = 2;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // repeated string outputs = 3;
  int outputs_size() const;
  void clear_outputs();
  static const int kOutputsFieldNumber = 3;
  const ::std::string& outputs(int index) const;
  ::std::string* mutable_outputs(int index);
  void set_outputs(int index, const ::std::string& value);
  void set_outputs(int index, const char* value);
  void set_outputs(int index, const char* value, size_t size);
  ::std::string* add_outputs();
  void add_outputs(const ::std::string& value);
  void add_outputs(const char* value);
  void add_outputs(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& outputs() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_outputs();

  // @@protoc_insertion_point(class_scope:gg.protobuf.RequestItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr hash_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::RepeatedPtrField< ::std::string> outputs_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gg_2eproto();
  friend void protobuf_AssignDesc_gg_2eproto();
  friend void protobuf_ShutdownFile_gg_2eproto();

  void InitAsDefaultInstance();
  static RequestItem* default_instance_;
};
// -------------------------------------------------------------------

class ExecutionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gg.protobuf.ExecutionRequest) */ {
 public:
  ExecutionRequest();
  virtual ~ExecutionRequest();

  ExecutionRequest(const ExecutionRequest& from);

  inline ExecutionRequest& operator=(const ExecutionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecutionRequest& default_instance();

  void Swap(ExecutionRequest* other);

  // implements Message ----------------------------------------------

  inline ExecutionRequest* New() const { return New(NULL); }

  ExecutionRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExecutionRequest& from);
  void MergeFrom(const ExecutionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExecutionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gg.protobuf.RequestItem thunks = 1;
  int thunks_size() const;
  void clear_thunks();
  static const int kThunksFieldNumber = 1;
  const ::gg::protobuf::RequestItem& thunks(int index) const;
  ::gg::protobuf::RequestItem* mutable_thunks(int index);
  ::gg::protobuf::RequestItem* add_thunks();
  ::google::protobuf::RepeatedPtrField< ::gg::protobuf::RequestItem >*
      mutable_thunks();
  const ::google::protobuf::RepeatedPtrField< ::gg::protobuf::RequestItem >&
      thunks() const;

  // optional string storage_backend = 2;
  void clear_storage_backend();
  static const int kStorageBackendFieldNumber = 2;
  const ::std::string& storage_backend() const;
  void set_storage_backend(const ::std::string& value);
  void set_storage_backend(const char* value);
  void set_storage_backend(const char* value, size_t size);
  ::std::string* mutable_storage_backend();
  ::std::string* release_storage_backend();
  void set_allocated_storage_backend(::std::string* storage_backend);

  // optional bool timelog = 3;
  void clear_timelog();
  static const int kTimelogFieldNumber = 3;
  bool timelog() const;
  void set_timelog(bool value);

  // @@protoc_insertion_point(class_scope:gg.protobuf.ExecutionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::gg::protobuf::RequestItem > thunks_;
  ::google::protobuf::internal::ArenaStringPtr storage_backend_;
  bool timelog_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gg_2eproto();
  friend void protobuf_AssignDesc_gg_2eproto();
  friend void protobuf_ShutdownFile_gg_2eproto();

  void InitAsDefaultInstance();
  static ExecutionRequest* default_instance_;
};
// -------------------------------------------------------------------

class OutputItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gg.protobuf.OutputItem) */ {
 public:
  OutputItem();
  virtual ~OutputItem();

  OutputItem(const OutputItem& from);

  inline OutputItem& operator=(const OutputItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OutputItem& default_instance();

  void Swap(OutputItem* other);

  // implements Message ----------------------------------------------

  inline OutputItem* New() const { return New(NULL); }

  OutputItem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OutputItem& from);
  void MergeFrom(const OutputItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OutputItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string tag = 1;
  void clear_tag();
  static const int kTagFieldNumber = 1;
  const ::std::string& tag() const;
  void set_tag(const ::std::string& value);
  void set_tag(const char* value);
  void set_tag(const char* value, size_t size);
  ::std::string* mutable_tag();
  ::std::string* release_tag();
  void set_allocated_tag(::std::string* tag);

  // optional string hash = 2;
  void clear_hash();
  static const int kHashFieldNumber = 2;
  const ::std::string& hash() const;
  void set_hash(const ::std::string& value);
  void set_hash(const char* value);
  void set_hash(const char* value, size_t size);
  ::std::string* mutable_hash();
  ::std::string* release_hash();
  void set_allocated_hash(::std::string* hash);

  // optional uint32 size = 3;
  void clear_size();
  static const int kSizeFieldNumber = 3;
  ::google::protobuf::uint32 size() const;
  void set_size(::google::protobuf::uint32 value);

  // optional bool executable = 4;
  void clear_executable();
  static const int kExecutableFieldNumber = 4;
  bool executable() const;
  void set_executable(bool value);

  // optional string data = 5;
  void clear_data();
  static const int kDataFieldNumber = 5;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:gg.protobuf.OutputItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr tag_;
  ::google::protobuf::internal::ArenaStringPtr hash_;
  ::google::protobuf::uint32 size_;
  bool executable_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gg_2eproto();
  friend void protobuf_AssignDesc_gg_2eproto();
  friend void protobuf_ShutdownFile_gg_2eproto();

  void InitAsDefaultInstance();
  static OutputItem* default_instance_;
};
// -------------------------------------------------------------------

class ResponseItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gg.protobuf.ResponseItem) */ {
 public:
  ResponseItem();
  virtual ~ResponseItem();

  ResponseItem(const ResponseItem& from);

  inline ResponseItem& operator=(const ResponseItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseItem& default_instance();

  void Swap(ResponseItem* other);

  // implements Message ----------------------------------------------

  inline ResponseItem* New() const { return New(NULL); }

  ResponseItem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponseItem& from);
  void MergeFrom(const ResponseItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResponseItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string thunk_hash = 1;
  void clear_thunk_hash();
  static const int kThunkHashFieldNumber = 1;
  const ::std::string& thunk_hash() const;
  void set_thunk_hash(const ::std::string& value);
  void set_thunk_hash(const char* value);
  void set_thunk_hash(const char* value, size_t size);
  ::std::string* mutable_thunk_hash();
  ::std::string* release_thunk_hash();
  void set_allocated_thunk_hash(::std::string* thunk_hash);

  // repeated .gg.protobuf.OutputItem outputs = 2;
  int outputs_size() const;
  void clear_outputs();
  static const int kOutputsFieldNumber = 2;
  const ::gg::protobuf::OutputItem& outputs(int index) const;
  ::gg::protobuf::OutputItem* mutable_outputs(int index);
  ::gg::protobuf::OutputItem* add_outputs();
  ::google::protobuf::RepeatedPtrField< ::gg::protobuf::OutputItem >*
      mutable_outputs();
  const ::google::protobuf::RepeatedPtrField< ::gg::protobuf::OutputItem >&
      outputs() const;

  // @@protoc_insertion_point(class_scope:gg.protobuf.ResponseItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr thunk_hash_;
  ::google::protobuf::RepeatedPtrField< ::gg::protobuf::OutputItem > outputs_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gg_2eproto();
  friend void protobuf_AssignDesc_gg_2eproto();
  friend void protobuf_ShutdownFile_gg_2eproto();

  void InitAsDefaultInstance();
  static ResponseItem* default_instance_;
};
// -------------------------------------------------------------------

class ExecutionResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gg.protobuf.ExecutionResponse) */ {
 public:
  ExecutionResponse();
  virtual ~ExecutionResponse();

  ExecutionResponse(const ExecutionResponse& from);

  inline ExecutionResponse& operator=(const ExecutionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecutionResponse& default_instance();

  void Swap(ExecutionResponse* other);

  // implements Message ----------------------------------------------

  inline ExecutionResponse* New() const { return New(NULL); }

  ExecutionResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExecutionResponse& from);
  void MergeFrom(const ExecutionResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExecutionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gg.protobuf.ResponseItem executed_thunks = 1;
  int executed_thunks_size() const;
  void clear_executed_thunks();
  static const int kExecutedThunksFieldNumber = 1;
  const ::gg::protobuf::ResponseItem& executed_thunks(int index) const;
  ::gg::protobuf::ResponseItem* mutable_executed_thunks(int index);
  ::gg::protobuf::ResponseItem* add_executed_thunks();
  ::google::protobuf::RepeatedPtrField< ::gg::protobuf::ResponseItem >*
      mutable_executed_thunks();
  const ::google::protobuf::RepeatedPtrField< ::gg::protobuf::ResponseItem >&
      executed_thunks() const;

  // optional uint32 return_code = 2;
  void clear_return_code();
  static const int kReturnCodeFieldNumber = 2;
  ::google::protobuf::uint32 return_code() const;
  void set_return_code(::google::protobuf::uint32 value);

  // optional string stdout = 3;
  void clear_stdout();
  static const int kStdoutFieldNumber = 3;
  const ::std::string& stdout() const;
  void set_stdout(const ::std::string& value);
  void set_stdout(const char* value);
  void set_stdout(const char* value, size_t size);
  ::std::string* mutable_stdout();
  ::std::string* release_stdout();
  void set_allocated_stdout(::std::string* stdout);

  // @@protoc_insertion_point(class_scope:gg.protobuf.ExecutionResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::gg::protobuf::ResponseItem > executed_thunks_;
  ::google::protobuf::internal::ArenaStringPtr stdout_;
  ::google::protobuf::uint32 return_code_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gg_2eproto();
  friend void protobuf_AssignDesc_gg_2eproto();
  friend void protobuf_ShutdownFile_gg_2eproto();

  void InitAsDefaultInstance();
  static ExecutionResponse* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RequestItem

// optional string hash = 1;
inline void RequestItem::clear_hash() {
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RequestItem::hash() const {
  // @@protoc_insertion_point(field_get:gg.protobuf.RequestItem.hash)
  return hash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestItem::set_hash(const ::std::string& value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gg.protobuf.RequestItem.hash)
}
inline void RequestItem::set_hash(const char* value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gg.protobuf.RequestItem.hash)
}
inline void RequestItem::set_hash(const char* value, size_t size) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gg.protobuf.RequestItem.hash)
}
inline ::std::string* RequestItem::mutable_hash() {
  
  // @@protoc_insertion_point(field_mutable:gg.protobuf.RequestItem.hash)
  return hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestItem::release_hash() {
  // @@protoc_insertion_point(field_release:gg.protobuf.RequestItem.hash)
  
  return hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestItem::set_allocated_hash(::std::string* hash) {
  if (hash != NULL) {
    
  } else {
    
  }
  hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash);
  // @@protoc_insertion_point(field_set_allocated:gg.protobuf.RequestItem.hash)
}

// optional string data = 2;
inline void RequestItem::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RequestItem::data() const {
  // @@protoc_insertion_point(field_get:gg.protobuf.RequestItem.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestItem::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gg.protobuf.RequestItem.data)
}
inline void RequestItem::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gg.protobuf.RequestItem.data)
}
inline void RequestItem::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gg.protobuf.RequestItem.data)
}
inline ::std::string* RequestItem::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:gg.protobuf.RequestItem.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestItem::release_data() {
  // @@protoc_insertion_point(field_release:gg.protobuf.RequestItem.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestItem::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:gg.protobuf.RequestItem.data)
}

// repeated string outputs = 3;
inline int RequestItem::outputs_size() const {
  return outputs_.size();
}
inline void RequestItem::clear_outputs() {
  outputs_.Clear();
}
inline const ::std::string& RequestItem::outputs(int index) const {
  // @@protoc_insertion_point(field_get:gg.protobuf.RequestItem.outputs)
  return outputs_.Get(index);
}
inline ::std::string* RequestItem::mutable_outputs(int index) {
  // @@protoc_insertion_point(field_mutable:gg.protobuf.RequestItem.outputs)
  return outputs_.Mutable(index);
}
inline void RequestItem::set_outputs(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:gg.protobuf.RequestItem.outputs)
  outputs_.Mutable(index)->assign(value);
}
inline void RequestItem::set_outputs(int index, const char* value) {
  outputs_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:gg.protobuf.RequestItem.outputs)
}
inline void RequestItem::set_outputs(int index, const char* value, size_t size) {
  outputs_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:gg.protobuf.RequestItem.outputs)
}
inline ::std::string* RequestItem::add_outputs() {
  // @@protoc_insertion_point(field_add_mutable:gg.protobuf.RequestItem.outputs)
  return outputs_.Add();
}
inline void RequestItem::add_outputs(const ::std::string& value) {
  outputs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:gg.protobuf.RequestItem.outputs)
}
inline void RequestItem::add_outputs(const char* value) {
  outputs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:gg.protobuf.RequestItem.outputs)
}
inline void RequestItem::add_outputs(const char* value, size_t size) {
  outputs_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:gg.protobuf.RequestItem.outputs)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
RequestItem::outputs() const {
  // @@protoc_insertion_point(field_list:gg.protobuf.RequestItem.outputs)
  return outputs_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
RequestItem::mutable_outputs() {
  // @@protoc_insertion_point(field_mutable_list:gg.protobuf.RequestItem.outputs)
  return &outputs_;
}

// -------------------------------------------------------------------

// ExecutionRequest

// repeated .gg.protobuf.RequestItem thunks = 1;
inline int ExecutionRequest::thunks_size() const {
  return thunks_.size();
}
inline void ExecutionRequest::clear_thunks() {
  thunks_.Clear();
}
inline const ::gg::protobuf::RequestItem& ExecutionRequest::thunks(int index) const {
  // @@protoc_insertion_point(field_get:gg.protobuf.ExecutionRequest.thunks)
  return thunks_.Get(index);
}
inline ::gg::protobuf::RequestItem* ExecutionRequest::mutable_thunks(int index) {
  // @@protoc_insertion_point(field_mutable:gg.protobuf.ExecutionRequest.thunks)
  return thunks_.Mutable(index);
}
inline ::gg::protobuf::RequestItem* ExecutionRequest::add_thunks() {
  // @@protoc_insertion_point(field_add:gg.protobuf.ExecutionRequest.thunks)
  return thunks_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gg::protobuf::RequestItem >*
ExecutionRequest::mutable_thunks() {
  // @@protoc_insertion_point(field_mutable_list:gg.protobuf.ExecutionRequest.thunks)
  return &thunks_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gg::protobuf::RequestItem >&
ExecutionRequest::thunks() const {
  // @@protoc_insertion_point(field_list:gg.protobuf.ExecutionRequest.thunks)
  return thunks_;
}

// optional string storage_backend = 2;
inline void ExecutionRequest::clear_storage_backend() {
  storage_backend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExecutionRequest::storage_backend() const {
  // @@protoc_insertion_point(field_get:gg.protobuf.ExecutionRequest.storage_backend)
  return storage_backend_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecutionRequest::set_storage_backend(const ::std::string& value) {
  
  storage_backend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gg.protobuf.ExecutionRequest.storage_backend)
}
inline void ExecutionRequest::set_storage_backend(const char* value) {
  
  storage_backend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gg.protobuf.ExecutionRequest.storage_backend)
}
inline void ExecutionRequest::set_storage_backend(const char* value, size_t size) {
  
  storage_backend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gg.protobuf.ExecutionRequest.storage_backend)
}
inline ::std::string* ExecutionRequest::mutable_storage_backend() {
  
  // @@protoc_insertion_point(field_mutable:gg.protobuf.ExecutionRequest.storage_backend)
  return storage_backend_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecutionRequest::release_storage_backend() {
  // @@protoc_insertion_point(field_release:gg.protobuf.ExecutionRequest.storage_backend)
  
  return storage_backend_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecutionRequest::set_allocated_storage_backend(::std::string* storage_backend) {
  if (storage_backend != NULL) {
    
  } else {
    
  }
  storage_backend_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), storage_backend);
  // @@protoc_insertion_point(field_set_allocated:gg.protobuf.ExecutionRequest.storage_backend)
}

// optional bool timelog = 3;
inline void ExecutionRequest::clear_timelog() {
  timelog_ = false;
}
inline bool ExecutionRequest::timelog() const {
  // @@protoc_insertion_point(field_get:gg.protobuf.ExecutionRequest.timelog)
  return timelog_;
}
inline void ExecutionRequest::set_timelog(bool value) {
  
  timelog_ = value;
  // @@protoc_insertion_point(field_set:gg.protobuf.ExecutionRequest.timelog)
}

// -------------------------------------------------------------------

// OutputItem

// optional string tag = 1;
inline void OutputItem::clear_tag() {
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OutputItem::tag() const {
  // @@protoc_insertion_point(field_get:gg.protobuf.OutputItem.tag)
  return tag_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OutputItem::set_tag(const ::std::string& value) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gg.protobuf.OutputItem.tag)
}
inline void OutputItem::set_tag(const char* value) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gg.protobuf.OutputItem.tag)
}
inline void OutputItem::set_tag(const char* value, size_t size) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gg.protobuf.OutputItem.tag)
}
inline ::std::string* OutputItem::mutable_tag() {
  
  // @@protoc_insertion_point(field_mutable:gg.protobuf.OutputItem.tag)
  return tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OutputItem::release_tag() {
  // @@protoc_insertion_point(field_release:gg.protobuf.OutputItem.tag)
  
  return tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OutputItem::set_allocated_tag(::std::string* tag) {
  if (tag != NULL) {
    
  } else {
    
  }
  tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:gg.protobuf.OutputItem.tag)
}

// optional string hash = 2;
inline void OutputItem::clear_hash() {
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OutputItem::hash() const {
  // @@protoc_insertion_point(field_get:gg.protobuf.OutputItem.hash)
  return hash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OutputItem::set_hash(const ::std::string& value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gg.protobuf.OutputItem.hash)
}
inline void OutputItem::set_hash(const char* value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gg.protobuf.OutputItem.hash)
}
inline void OutputItem::set_hash(const char* value, size_t size) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gg.protobuf.OutputItem.hash)
}
inline ::std::string* OutputItem::mutable_hash() {
  
  // @@protoc_insertion_point(field_mutable:gg.protobuf.OutputItem.hash)
  return hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OutputItem::release_hash() {
  // @@protoc_insertion_point(field_release:gg.protobuf.OutputItem.hash)
  
  return hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OutputItem::set_allocated_hash(::std::string* hash) {
  if (hash != NULL) {
    
  } else {
    
  }
  hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash);
  // @@protoc_insertion_point(field_set_allocated:gg.protobuf.OutputItem.hash)
}

// optional uint32 size = 3;
inline void OutputItem::clear_size() {
  size_ = 0u;
}
inline ::google::protobuf::uint32 OutputItem::size() const {
  // @@protoc_insertion_point(field_get:gg.protobuf.OutputItem.size)
  return size_;
}
inline void OutputItem::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:gg.protobuf.OutputItem.size)
}

// optional bool executable = 4;
inline void OutputItem::clear_executable() {
  executable_ = false;
}
inline bool OutputItem::executable() const {
  // @@protoc_insertion_point(field_get:gg.protobuf.OutputItem.executable)
  return executable_;
}
inline void OutputItem::set_executable(bool value) {
  
  executable_ = value;
  // @@protoc_insertion_point(field_set:gg.protobuf.OutputItem.executable)
}

// optional string data = 5;
inline void OutputItem::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OutputItem::data() const {
  // @@protoc_insertion_point(field_get:gg.protobuf.OutputItem.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OutputItem::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gg.protobuf.OutputItem.data)
}
inline void OutputItem::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gg.protobuf.OutputItem.data)
}
inline void OutputItem::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gg.protobuf.OutputItem.data)
}
inline ::std::string* OutputItem::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:gg.protobuf.OutputItem.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OutputItem::release_data() {
  // @@protoc_insertion_point(field_release:gg.protobuf.OutputItem.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OutputItem::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:gg.protobuf.OutputItem.data)
}

// -------------------------------------------------------------------

// ResponseItem

// optional string thunk_hash = 1;
inline void ResponseItem::clear_thunk_hash() {
  thunk_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResponseItem::thunk_hash() const {
  // @@protoc_insertion_point(field_get:gg.protobuf.ResponseItem.thunk_hash)
  return thunk_hash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseItem::set_thunk_hash(const ::std::string& value) {
  
  thunk_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gg.protobuf.ResponseItem.thunk_hash)
}
inline void ResponseItem::set_thunk_hash(const char* value) {
  
  thunk_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gg.protobuf.ResponseItem.thunk_hash)
}
inline void ResponseItem::set_thunk_hash(const char* value, size_t size) {
  
  thunk_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gg.protobuf.ResponseItem.thunk_hash)
}
inline ::std::string* ResponseItem::mutable_thunk_hash() {
  
  // @@protoc_insertion_point(field_mutable:gg.protobuf.ResponseItem.thunk_hash)
  return thunk_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponseItem::release_thunk_hash() {
  // @@protoc_insertion_point(field_release:gg.protobuf.ResponseItem.thunk_hash)
  
  return thunk_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseItem::set_allocated_thunk_hash(::std::string* thunk_hash) {
  if (thunk_hash != NULL) {
    
  } else {
    
  }
  thunk_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), thunk_hash);
  // @@protoc_insertion_point(field_set_allocated:gg.protobuf.ResponseItem.thunk_hash)
}

// repeated .gg.protobuf.OutputItem outputs = 2;
inline int ResponseItem::outputs_size() const {
  return outputs_.size();
}
inline void ResponseItem::clear_outputs() {
  outputs_.Clear();
}
inline const ::gg::protobuf::OutputItem& ResponseItem::outputs(int index) const {
  // @@protoc_insertion_point(field_get:gg.protobuf.ResponseItem.outputs)
  return outputs_.Get(index);
}
inline ::gg::protobuf::OutputItem* ResponseItem::mutable_outputs(int index) {
  // @@protoc_insertion_point(field_mutable:gg.protobuf.ResponseItem.outputs)
  return outputs_.Mutable(index);
}
inline ::gg::protobuf::OutputItem* ResponseItem::add_outputs() {
  // @@protoc_insertion_point(field_add:gg.protobuf.ResponseItem.outputs)
  return outputs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gg::protobuf::OutputItem >*
ResponseItem::mutable_outputs() {
  // @@protoc_insertion_point(field_mutable_list:gg.protobuf.ResponseItem.outputs)
  return &outputs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gg::protobuf::OutputItem >&
ResponseItem::outputs() const {
  // @@protoc_insertion_point(field_list:gg.protobuf.ResponseItem.outputs)
  return outputs_;
}

// -------------------------------------------------------------------

// ExecutionResponse

// repeated .gg.protobuf.ResponseItem executed_thunks = 1;
inline int ExecutionResponse::executed_thunks_size() const {
  return executed_thunks_.size();
}
inline void ExecutionResponse::clear_executed_thunks() {
  executed_thunks_.Clear();
}
inline const ::gg::protobuf::ResponseItem& ExecutionResponse::executed_thunks(int index) const {
  // @@protoc_insertion_point(field_get:gg.protobuf.ExecutionResponse.executed_thunks)
  return executed_thunks_.Get(index);
}
inline ::gg::protobuf::ResponseItem* ExecutionResponse::mutable_executed_thunks(int index) {
  // @@protoc_insertion_point(field_mutable:gg.protobuf.ExecutionResponse.executed_thunks)
  return executed_thunks_.Mutable(index);
}
inline ::gg::protobuf::ResponseItem* ExecutionResponse::add_executed_thunks() {
  // @@protoc_insertion_point(field_add:gg.protobuf.ExecutionResponse.executed_thunks)
  return executed_thunks_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gg::protobuf::ResponseItem >*
ExecutionResponse::mutable_executed_thunks() {
  // @@protoc_insertion_point(field_mutable_list:gg.protobuf.ExecutionResponse.executed_thunks)
  return &executed_thunks_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gg::protobuf::ResponseItem >&
ExecutionResponse::executed_thunks() const {
  // @@protoc_insertion_point(field_list:gg.protobuf.ExecutionResponse.executed_thunks)
  return executed_thunks_;
}

// optional uint32 return_code = 2;
inline void ExecutionResponse::clear_return_code() {
  return_code_ = 0u;
}
inline ::google::protobuf::uint32 ExecutionResponse::return_code() const {
  // @@protoc_insertion_point(field_get:gg.protobuf.ExecutionResponse.return_code)
  return return_code_;
}
inline void ExecutionResponse::set_return_code(::google::protobuf::uint32 value) {
  
  return_code_ = value;
  // @@protoc_insertion_point(field_set:gg.protobuf.ExecutionResponse.return_code)
}

// optional string stdout = 3;
inline void ExecutionResponse::clear_stdout() {
  stdout_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExecutionResponse::stdout() const {
  // @@protoc_insertion_point(field_get:gg.protobuf.ExecutionResponse.stdout)
  return stdout_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecutionResponse::set_stdout(const ::std::string& value) {
  
  stdout_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gg.protobuf.ExecutionResponse.stdout)
}
inline void ExecutionResponse::set_stdout(const char* value) {
  
  stdout_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gg.protobuf.ExecutionResponse.stdout)
}
inline void ExecutionResponse::set_stdout(const char* value, size_t size) {
  
  stdout_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gg.protobuf.ExecutionResponse.stdout)
}
inline ::std::string* ExecutionResponse::mutable_stdout() {
  
  // @@protoc_insertion_point(field_mutable:gg.protobuf.ExecutionResponse.stdout)
  return stdout_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecutionResponse::release_stdout() {
  // @@protoc_insertion_point(field_release:gg.protobuf.ExecutionResponse.stdout)
  
  return stdout_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecutionResponse::set_allocated_stdout(::std::string* stdout) {
  if (stdout != NULL) {
    
  } else {
    
  }
  stdout_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stdout);
  // @@protoc_insertion_point(field_set_allocated:gg.protobuf.ExecutionResponse.stdout)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace gg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_gg_2eproto__INCLUDED
